<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>addAttendeeToConference</mutatedMethod><methodDescription>(Lcode/Person;)Z</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>9</block><killingTest>code.ConferenceTest.EnoughRoomTestFalse(code.ConferenceTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>addAttendeeToConference</mutatedMethod><methodDescription>(Lcode/Person;)Z</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>9</block><killingTest>code.ConferenceTest.EnoughRoomTestTrueWithDoubleCapacityTrue(code.ConferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>addAttendeeToConference</mutatedMethod><methodDescription>(Lcode/Person;)Z</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>10</block><killingTest>code.ConferenceTest.EnoughRoomTestTrueWithDoubleCapacityTrue(code.ConferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>addAttendeeToConference</mutatedMethod><methodDescription>(Lcode/Person;)Z</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>11</block><killingTest>code.ConferenceTest.EnoughRoomTestTrueWithDoubleCapacityTrue(code.ConferenceTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>addAttendeeToConference</mutatedMethod><methodDescription>(Lcode/Person;)Z</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>12</block><killingTest>code.ConferenceTest.EnoughRoomTestFalse(code.ConferenceTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>calculateTotalPricePaid</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>3</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>calculateTotalPricePaid</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>3</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>calculateTotalPricePaid</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>3</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>calculateTotalPricePaid</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>5</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>calculateTotalPricePaid</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>5</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>calculateTotalPricePaid</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>5</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>calculateTotalPricePaid</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>7</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>calculateTotalPricePaid</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>2</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>calculateTotalPricePaid</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>4</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>calculateTotalPricePaid</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>6</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>calculateTotalPricePaid</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>82</index><block>8</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>replaced return of double value with -(x + 1) for code/Conference::calculateTotalPricePaid</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>doubleCapacity</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>13</block><killingTest>code.ConferenceTest.doubleCapacityChangeBoundaryConditionalTest(code.ConferenceTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>doubleCapacity</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>13</block><killingTest>code.ConferenceTest.EnoughRoomTestFalse(code.ConferenceTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>doubleCapacity</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>15</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>doubleCapacity</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>13</block><killingTest>code.ConferenceTest.doubleCapacityChangeBoundaryConditionalTest(code.ConferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>doubleCapacity</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>14</block><killingTest>code.ConferenceTest.EnoughRoomTestFalse(code.ConferenceTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>doubleCapacity</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>15</block><killingTest>code.ConferenceTest.doubleCapacityChangeBoundaryConditionalTest(code.ConferenceTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>getAttendees</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>16</block><killingTest>code.ConferenceTest.getAttendeesTest(code.ConferenceTest)</killingTest><description>mutated return of Object value for code/Conference::getAttendees to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Conference.java</sourceFile><mutatedClass>code.Conference</mutatedClass><mutatedMethod>getCapacity</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>17</block><killingTest>code.ConferenceTest.testMultiplication(code.ConferenceTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>EnoughRoomTestFalse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>5</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>EnoughRoomTestFalse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>5</block><killingTest>code.ConferenceTest.EnoughRoomTestFalse(code.ConferenceTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>EnoughRoomTestFalse</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>7</block><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertFalse</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>EnoughRoomTestTrue</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>1</block><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertTrue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>EnoughRoomTestTrueWithDoubleCapacityTrue</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>2</block><killingTest>code.ConferenceTest.EnoughRoomTestTrueWithDoubleCapacityTrue(code.ConferenceTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>EnoughRoomTestTrueWithDoubleCapacityTrue</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>EnoughRoomTestTrueWithDoubleCapacityTrue</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>4</block><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertTrue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>calculateTotalPriceTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>10</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>calculateTotalPriceTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>10</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>calculateTotalPriceTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>10</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>calculateTotalPriceTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>10</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>calculateTotalPriceTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>10</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>calculateTotalPriceTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>10</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>calculateTotalPriceTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>77</index><block>10</block><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>doubleCapacityChangeBoundaryConditionalTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>8</block><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>doubleCapacityChangeBoundaryConditionalTest2</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>9</block><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>getAttendeesTest</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><block>11</block><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ConferenceTest.java</sourceFile><mutatedClass>code.ConferenceTest</mutatedClass><mutatedMethod>testMultiplication</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>12</block><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Person.java</sourceFile><mutatedClass>code.Person</mutatedClass><mutatedMethod>getRole</mutatedMethod><methodDescription>()Lcode/Role;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>code.ConferenceTest.calculateTotalPriceTest(code.ConferenceTest)</killingTest><description>mutated return of Object value for code/Person::getRole to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Person.java</sourceFile><mutatedClass>code.Person</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>5</block><killingTest/><description>mutated return of Object value for code/Person::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
</mutations>
